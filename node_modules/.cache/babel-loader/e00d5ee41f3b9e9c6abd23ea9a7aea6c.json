{"ast":null,"code":"var _jsxFileName = \"/home/oem/UniversityProjects/MIPT/FullStack/Project/demo/app/src/Edit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.nullFoodItem = {\n      description: '',\n      calories: ''\n    };\n    this.state = {\n      foodItem: this.nullFoodItem\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      const newFoodItem = await (await fetch(`/food/${this.props.match.params.id}`)).json();\n      this.setState({\n        foodItem: newFoodItem\n      });\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let foodItem = { ...this.state.foodItem\n    };\n    foodItem[name] = value;\n    console.log(\"save new \" + name);\n    console.log(foodItem);\n    this.setState({\n      foodItem\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      foodItem,\n      item\n    } = this.state;\n    console.log(this.state);\n    console.log(foodItem);\n    console.log(item);\n    await fetch('/food' + (foodItem.id ? '/' + foodItem.id : ''), {\n      method: foodItem.id ? 'PUT' : 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(foodItem)\n    });\n    this.props.history.push('/food');\n  }\n\n  render() {\n    const {\n      foodItem\n    } = this.state;\n\n    const title = /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: foodItem.id ? 'Edit your meal' : 'Add your meal'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: 'set_background',\n        children: [title, /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"description\",\n              id: \"description\",\n              value: foodItem.description || '',\n              onChange: this.handleChange,\n              autoComplete: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"calories\",\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"calories\",\n              id: \"calories\",\n              value: foodItem.calories || '',\n              onChange: this.handleChange,\n              autoComplete: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              tag: Link,\n              to: \"/food\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Edit);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/oem/UniversityProjects/MIPT/FullStack/Project/demo/app/src/Edit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","AppNavbar","Edit","constructor","props","nullFoodItem","description","calories","state","foodItem","handleChange","bind","handleSubmit","componentDidMount","match","params","id","newFoodItem","fetch","json","setState","event","target","value","name","console","log","preventDefault","item","method","headers","body","JSON","stringify","history","push","render","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\n\nclass Edit extends Component {\n\n    nullFoodItem = {\n        description: '',\n        calories: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            foodItem: this.nullFoodItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const newFoodItem = await (await fetch(`/food/${this.props.match.params.id}`)).json();\n            this.setState({ foodItem: newFoodItem });\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let foodItem = { ...this.state.foodItem };\n        foodItem[name] = value;\n        console.log(\"save new \" + name);\n        console.log(foodItem);\n        this.setState({ foodItem });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const { foodItem, item } = this.state;\n\n        console.log(this.state);\n        console.log(foodItem);\n        console.log(item);\n\n        await fetch('/food' + (foodItem.id ? '/' + foodItem.id : ''), {\n            method: (foodItem.id) ? 'PUT' : 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(foodItem),\n        });\n        this.props.history.push('/food');\n    }\n\n    render() {\n        const { foodItem } = this.state;\n        const title = <h2>{foodItem.id ? 'Edit your meal' : 'Add your meal'}</h2>;\n\n        return <div>\n            <AppNavbar />\n            <Container fluid className={'set_background'}>\n                {title}\n                <Form onSubmit={this.handleSubmit} className=\"form\">\n                    <FormGroup>\n                        <Label for=\"description\">Description</Label>\n                        <Input type=\"text\" name=\"description\" id=\"description\" value={foodItem.description || ''}\n                            onChange={this.handleChange} autoComplete=\"description\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"calories\">Calories</Label>\n                        <Input type=\"text\" name=\"calories\" id=\"calories\" value={foodItem.calories || ''}\n                            onChange={this.handleChange} autoComplete=\"10\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/food\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(Edit);"]},"metadata":{},"sourceType":"module"}